{"version":3,"sources":["components/card.component.jsx","components/card-list.component.jsx","components/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","div","Card","monster","alt","src","id","name","email","address","city","zipcode","CardList","monsters","map","m","input","SearchBox","placeholder","handleChange","type","onChange","App","props","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filterMonsters","filter","toLowerCase","includes","className","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6PAGMA,EAAUC,IAAOC,IAAV,6XAiBAC,EAAO,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACpB,OACE,eAACJ,EAAD,WACE,qBAAKK,IAAI,UAAUC,IAAG,+BAA0BF,EAAQG,GAAlC,4BACtB,wCAAWH,EAAQI,QACnB,yCAAYJ,EAAQK,SACpB,wCAAWL,EAAQM,QAAQC,QAC3B,2CAAcP,EAAQM,QAAQE,eCvB9BZ,EAAUC,IAAOC,IAAV,+IAQAW,EAAW,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACxB,OACE,cAAC,EAAD,UACGA,EAASC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAiBZ,QAASY,GAAfA,EAAET,UCZhCP,EAAUC,IAAOgB,MAAV,6KAUAC,EAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACtC,OACE,cAAC,EAAD,CAASC,KAAK,OAAOF,YAAaA,EAAaG,SAAUF,KCwB9CG,G,wDAjCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAcRF,SAAW,SAACG,GACV,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbrC,EAAKC,MAAQ,CACXhB,SAAU,GACVa,YAAa,IALE,E,qDASnB,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACZ,SAAUqB,S,oBAO5C,WAAU,IAAD,EACyBC,KAAKN,MAA9BhB,EADA,EACAA,SAAUa,EADV,EACUA,YACXU,EAAiBvB,EAASwB,QAAO,SAAAlC,GAAO,OAAIA,EAAQI,KAAK+B,cAAcC,SAASb,EAAYY,kBAElG,OACE,sBAAKE,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWtB,YAAY,kBAAkBC,aAAcgB,KAAKd,WAC5D,cAAC,EAAD,CAAUR,SAAUuB,W,GA5BVK,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,EAAD,IAAQC,SAASC,eAAe,SAMlCX,M","file":"static/js/main.6ca932ea.chunk.js","sourcesContent":["import React from 'react';\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: #95dada;\n  border: 1px solid grey;\n  border-radius: 5px;\n  padding: 25px;\n  cursor: pointer;\n  -moz-osx-font-smoothing: grayscale;\n  backface-visibility: hidden;\n  transform: translateZ(0);\n  transition: transform 0.25s ease-out;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`\nexport const Card = ({monster}) => {\n  return (\n    <Wrapper>\n      <img alt='monster' src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}/>\n      <h3>Name: {monster.name}</h3>\n      <h4>Email: {monster.email}</h4>\n      <h4>City: {monster.address.city}</h4>\n      <h4>ZipCode: {monster.address.zipcode}</h4>\n\n    </Wrapper>\n  )\n}","import React from 'react';\nimport styled from 'styled-components';\nimport {Card} from \"./card.component\";\n\nconst Wrapper = styled.div`\n  width: 85vw;\n  margin: 0 auto;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 20px;\n`\n\nexport const CardList = ({monsters}) => {\n  return (\n    <Wrapper>\n      {monsters.map(m => <Card key={m.id} monster={m}/>)}\n    </Wrapper>\n  )\n}","import React from 'react';\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.input`\n  -webkit-appearance: none;\n  border: none;\n  outline: none;\n  padding: 10px;\n  width: 150px;\n  line-height: 30px;\n  margin-bottom: 30px;\n`\n\nexport const SearchBox = ({placeholder, handleChange}) => {\n  return (\n    <Wrapper type='text' placeholder={placeholder} onChange={handleChange}/>\n  )\n}","import React, {Component} from 'react';\nimport {CardList} from \"./components/card-list.component\";\nimport {SearchBox} from \"./components/search-box.component\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // this.state is a object, we can't directly put the value into the this.state, we need use KEY===VALUE pair\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({monsters: users}))\n  }\n\n  onChange = (e) => {\n    this.setState({searchField: e.target.value})\n  }\n\n  render() {\n    const {monsters, searchField} = this.state;\n    const filterMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder='search monsters' handleChange={this.onChange}/>\n        <CardList monsters={filterMonsters}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n// JSX is try to mimic what html does","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App/>, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}